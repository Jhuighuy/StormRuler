# Copyright (C) 2020-2023 Oleg Butakov
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

# ------------------------------------------------------------------------------

name: Build

# ------------------------------------------------------------------------------

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

# ------------------------------------------------------------------------------

jobs:

  # ----------------------------------------------------------------------------

  build_ubuntu:
    name: Ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [g++-12]
        standard: [c++20]
        configuration: [Debug, Release]
      fail-fast: false

    steps:

      # ------------------------------------------------------------------------

      - name: Checkout
        uses: actions/checkout@v3

      # ------------------------------------------------------------------------

      - name: Install mold
        uses: rui314/setup-mold@v1
        with:
          make-default: false
        continue-on-error: true # might fail for unknown reason.

      # ------------------------------------------------------------------------

      - name: Build
        run: |
          ./scripts/configure.py \
              -cxx=${{ matrix.compiler }} -std=${{ matrix.standard }} \
              -cfg=${{ matrix.configuration }}
          ./scripts/build.py -j

      # ------------------------------------------------------------------------

      - name: Run tests
        run: |
          ./bin/StormRuler_UnitTests
          ./bin/StormRuler_Benchmarks

  # ----------------------------------------------------------------------------

  build_macos:
    name: macOS
    runs-on: macos-latest
    strategy:
      matrix:
        compiler: [g++-12, g++-13]
        standard: [c++20]
        configuration: [Debug, Release]
      fail-fast: false

    steps:

      # ------------------------------------------------------------------------

      - name: Checkout
        uses: actions/checkout@v3

      # ------------------------------------------------------------------------

      - name: Build
        run: |
          ./scripts/configure.py \
              -cxx=${{ matrix.compiler }} -std=${{ matrix.standard }} \
              -cfg=${{ matrix.configuration }}
          ./scripts/build.py -j

      # ------------------------------------------------------------------------

      - name: Run tests
        run: |
          ./bin/StormRuler_UnitTests
          ./bin/StormRuler_Benchmarks

  # ----------------------------------------------------------------------------

  build_windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      matrix:
        compiler: [cl, g++]
        standard: [c++20]
        configuration: [Debug, Release]
      fail-fast: false

    steps:

      # ------------------------------------------------------------------------

      - name: Checkout
        uses: actions/checkout@v3

      # ------------------------------------------------------------------------

      - name: Setup MSYS2 (MinGW)
        if: matrix.compiler == 'g++'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            git
            base-devel
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake

      # ------------------------------------------------------------------------

      - name: Build (MSVC)
        if: matrix.compiler == 'cl'
        shell: bash
        run: |
          ./scripts/configure.py -std=${{ matrix.standard }}
          ./scripts/build.py -cfg=${{ matrix.configuration }}

      - name: Build (MinGW)
        if: matrix.compiler == 'g++'
        shell: msys2 {0}
        run: |
          ./scripts/configure.py \
              -cxx=${{ matrix.compiler }} -std=${{ matrix.standard }} \
              -args -G "Ninja Multi-Config"
          ./scripts/build.py -cfg=${{ matrix.configuration }} -j

      # ------------------------------------------------------------------------

      - name: Run tests (MSVC)
        if: matrix.compiler == 'cl'
        shell: bash
        run: |
          ./bin/${{ matrix.configuration }}/StormRuler_UnitTests.exe
          ./bin/${{ matrix.configuration }}/StormRuler_Benchmarks.exe

      - name: Run tests (MinGW)
        if: matrix.compiler == 'g++'
        shell: msys2 {0}
        run: |
          ./bin/${{ matrix.configuration }}/StormRuler_UnitTests.exe
          ./bin/${{ matrix.configuration }}/StormRuler_Benchmarks.exe

  # ----------------------------------------------------------------------------

# ------------------------------------------------------------------------------
